name: Laravel CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: recipes_app_test
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: test_user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, phar, tokenizer, xml, zip, curl, fileinfo

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS recipes_app_test;"
        mysql -h 127.0.0.1 -P 3306 -u root -ppassword -e "GRANT ALL PRIVILEGES ON recipes_app_test.* TO 'test_user'@'%';"
        mysql -h 127.0.0.1 -P 3306 -u root -ppassword -e "FLUSH PRIVILEGES;"

    - name: Update .env for testing
      run: |
        sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=recipes_app_test/' .env
        sed -i 's/DB_USERNAME=.*/DB_USERNAME=test_user/' .env
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Run Tests
      run: php artisan test

    - name: Test Results
      if: always()
      run: |
        echo "‚úÖ Tests completed!"
        echo "üìä Test Summary:"
        php artisan test --stop-on-failure=false || true

  code-quality:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, phar, tokenizer, xml, zip, curl, fileinfo

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Check PHP Syntax
      run: |
        find app -name "*.php" -exec php -l {} \;
        find tests -name "*.php" -exec php -l {} \;

    - name: Check Composer
      run: composer validate

    - name: Check Laravel
      run: php artisan about

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Security Check
      run: composer audit --format=json --no-interaction || echo "Security check completed"

  notify:
    runs-on: ubuntu-latest
    needs: [test, code-quality, security]
    if: always()

    steps:
    - name: Success Notification
      if: success()
      run: |
        echo "üéâ All CI checks passed successfully!"
        echo "‚úÖ Tests: Passed"
        echo "‚úÖ Code Quality: Passed"
        echo "‚úÖ Security: Passed"

    - name: Failure Notification
      if: failure()
      run: |
        echo "‚ùå Some CI checks failed!"
        echo "Please review the logs above for details." 